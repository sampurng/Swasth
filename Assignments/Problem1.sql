SELECT * FROM SALES;
SELECT * FROM MEMBERS;
SELECT * FROM MENU;

-- QUESTION 1

--1)
SELECT CUSTOMER_CODE, COUNT(ORDER_DATE) FROM SALES WHERE CUSTOMER_CODE IN (SELECT DISTINCT CUSTOMER_CODE FROM SALES) GROUP BY CUSTOMER_CODE;
        
SELECT S.CUSTOMER_CODE, SUM(M.price), COUNT(DISTINCT(S.ORDER_DATE)) as Visits  
FROM SALES S LEFT JOIN MENU M 
ON S.PRODUCT_ID = M.PRODUCT_ID GROUP BY S.CUSTOMER_CODE;
        
--2)
SELECT * FROM (SELECT CUSTOMER_CODE, ORDER_DATE, M.PRODUCT_NAME, RANK() over(PARTITION BY CUSTOMER_CODE ORDER BY ORDER_DATE) as Rank
FROM SALES SA LEFT JOIN MENU M ON SA.PRODUCT_ID = M.PRODUCT_ID) S 
WHERE S.Rank = 1;
        
        
--3)
SELECT PRODUCT_ID, COUNT(PRODUCT_ID) as frequency FROM SALES GROUP BY PRODUCT_ID ORDER BY frequency DESC ;
        
--4)   
SELECT * FROM (
    SELECT PRODUCT_NAME, COUNT(A.PRODUCT_NAME) as Count, A.CUSTOMER_CODE, RANK() over (PARTITION BY A.CUSTOMER_CODE ORDER BY COUNT(A.PRODUCT_NAME) DESC) as Rank FROM (
        SELECT S.CUSTOMER_CODE, M.PRODUCT_NAME
        FROM SALES S LEFT JOIN MENU M ON S.PRODUCT_ID = M.PRODUCT_ID) A 
    GROUP BY A.PRODUCT_NAME, A.customer_code
) 
B WHERE B.Rank = 1;


--5)
SELECT AB.CUSTOMER_CODE, AB.DATE_OF_JOIN, AB.PRODUCT_NAME, AB.ORDER_DATE, AB.Rank, AB.PRODUCT_ID  FROM 
    (SELECT A.CUSTOMER_CODE, A.DATE_OF_JOIN, A.ORDER_DATE, ME.PRODUCT_NAME, A.PRODUCT_ID, A.Rank FROM 
        (
            SELECT S.CUSTOMER_CODE, M.DATE_OF_JOIN, S.ORDER_DATE, S.PRODUCT_ID, RANK() over(PARTITION BY S.CUSTOMER_CODE ORDER BY S.ORDER_DATE DESC) as Rank 
            FROM SALES S LEFT JOIN MEMBERS M 
            ON s.customer_code= m.customer_code 
            WHERE S.ORDER_DATE < M.DATE_OF_JOIN
        ) A LEFT JOIN MENU ME ON A.PRODUCT_ID = ME.PRODUCT_ID) AB    
WHERE AB.Rank = 1;




