SET SERVEROUTPUT ON
/
CREATE OR REPLACE PROCEDURE ROLE_CREATION_PROCEDURE AS
    CURSOR CUR_ROLES IS SELECT ROLE FROM DBA_ROLES WHERE ROLE LIKE 'SWASTH_%';
    CURSOR CUR_USERS IS SELECT USERNAME FROM DBA_USERS WHERE USERNAME IN ('SCLIENT', 'SEVENTMANAGER', 'SADMIN');
    E_ROLES_ABSENT EXCEPTION;
    V_COUNT_ROLES NUMBER;
    V_COUNT_USERS NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_COUNT_ROLES FROM DBA_ROLES WHERE ROLE LIKE 'SWASTH_%';
    DBMS_OUTPUT.PUT_LINE('Roles Present : ' || V_COUNT_ROLES);
    
    SELECT COUNT(*) INTO V_COUNT_USERS FROM DBA_USERS WHERE USERNAME IN ('SCLIENT', 'SEVENTMANAGER', 'SADMIN');
    DBMS_OUTPUT.PUT_LINE('Users Present : ' || V_COUNT_USERS);

    -- Dropping Users
    IF V_COUNT_USERS > 0 THEN 
        FOR USR IN CUR_USERS LOOP
            EXECUTE IMMEDIATE ('DROP USER ' || USR.USERNAME );
        END LOOP;
    END IF;
    
    -- DROPPING ROLES
    IF V_COUNT_ROLES > 0 THEN
        FOR ROL IN CUR_ROLES LOOP
            EXECUTE IMMEDIATE ('DROP ROLE ' || ROL.ROLE); 
        END LOOP;
        DBMS_OUTPUT.PUT_LINE('ROLES DROPPED');
    END IF;
    RAISE E_ROLES_ABSENT;
EXCEPTION
    WHEN E_ROLES_ABSENT THEN
            DBMS_OUTPUT.PUT_LINE('NO ROLES PRESENT... CREATING ROLES');
            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_ADMIN');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_ADMIN ROLE');
            
            -- Granting permissions for SWASTH_ADMIN role
            EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT CONNECT TO SWASTH_ADMIN';

            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON user_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON sleep_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON sleep_metrics TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON exercise_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON exercise_metrics TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON health_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON body_composition TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE, DELETE ON user_details TO SWASTH_ADMIN';
            DBMS_OUTPUT.PUT_LINE('SWASTH_ADMIN ROLE GIVEN ACCESS, CREATING s_admin USER WITH ROLE SWATH_ADMIN');
            EXECUTE IMMEDIATE 'CREATE USER sadmin IDENTIFIED BY SwasthGroupProject1';
            EXECUTE IMMEDIATE 'GRANT SWASTH_ADMIN TO sadmin'; 
            

            
            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_EVENT_MANAGER');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_EVENT_MANAGER ROLE');
            
            -- Granting permissions for SWASTH_EVENT_MANAGER role
            EXECUTE IMMEDIATE 'GRANT SELECT ON activities_view TO SWASTH_EVENT_MANAGER';
            DBMS_OUTPUT.PUT_LINE('SWASTH_EVENT_MANAGER ROLE GIVEN ACCESS, Creating corresponding user');
            EXECUTE IMMEDIATE 'CREATE USER seventmanager IDENTIFIED BY SwasthGroupProject1';
            EXECUTE IMMEDIATE 'GRANT SWASTH_EVENT_MANAGER TO seventmanager'; 


            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_CLIENT');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_CLIENT ROLE');
        
            -- Granting access to views
            EXECUTE IMMEDIATE 'GRANT SELECT ON health_progress_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON exercise_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON sleep_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON activities_view TO SWASTH_CLIENT';
           -- EXECUTE IMMEDIATE 'GRANT SELECT ON user_overview TO SWASTH_CLIENT';
            DBMS_OUTPUT.PUT_LINE('SWASTH_CLIENT ROLE GIVEN ACCESS, Creating corresponding user');
            EXECUTE IMMEDIATE 'CREATE USER sclient IDENTIFIED BY SwasthGroupProject1';
            EXECUTE IMMEDIATE 'GRANT SWASTH_CLIENT TO sclient'; 
    WHEN OTHERS THEN NULL;
END;
/

EXECUTE ROLE_CREATION_PROCEDURE;
--DROP USER SCLIENT;
--DROP USER SEVENTMANAGER;
--DROP USER SADMIN;
--SELECT * FROM DBA_USERS;

