SET SERVEROUTPUT ON
/
CREATE OR REPLACE PROCEDURE ROLE_CREATION_PROCEDURE AS
    CURSOR CUR_ROLES IS SELECT ROLE FROM DBA_ROLES WHERE ROLE LIKE 'SWASTH_%';
    E_ROLES_ABSENT EXCEPTION;
    V_COUNT_ROLES NUMBER;
    v_role_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO V_COUNT_ROLES FROM DBA_ROLES WHERE ROLE LIKE 'SWASTH_%';
    DBMS_OUTPUT.PUT_LINE(V_COUNT_ROLES);

    IF V_COUNT_ROLES > 0 THEN
        FOR ROL IN CUR_ROLES LOOP
            EXECUTE IMMEDIATE ('DROP ROLE ' || ROL.ROLE); 
        END LOOP;
        DBMS_OUTPUT.PUT_LINE('ROLES DROPPED');
    ELSE
        RAISE E_ROLES_ABSENT;
    END IF;

EXCEPTION
    WHEN E_ROLES_ABSENT THEN
        DBMS_OUTPUT.PUT_LINE('NO ROLES PRESENT... CREATING ROLES');
            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_ADMIN');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_ADMIN ROLE');
            
            -- Granting permissions for SWASTH_ADMIN role
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON user_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON sleep_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON sleep_metrics TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON exercise_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON exercise_metrics TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON health_details TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT INSERT, UPDATE, DELETE ON body_composition TO SWASTH_ADMIN';
            EXECUTE IMMEDIATE 'GRANT SELECT, INSERT, UPDATE, DELETE ON user_details TO SWASTH_ADMIN';
            DBMS_OUTPUT.PUT_LINE('SWASTH_ADMIN ROLE GIVEN ACCESS');

            
            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_EVENT_MANAGER');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_EVENT_MANAGER ROLE');
            
            -- Granting permissions for SWASTH_EVENT_MANAGER role
            EXECUTE IMMEDIATE 'GRANT SELECT ON activities_view TO SWASTH_EVENT_MANAGER';
            DBMS_OUTPUT.PUT_LINE('SWASTH_EVENT_MANAGER ROLE GIVEN ACCESS');

            EXECUTE IMMEDIATE ('CREATE ROLE SWASTH_CLIENT');
            DBMS_OUTPUT.PUT_LINE('CREATED SWASTH_CLIENT ROLE');
        
            -- Granting access to views
            EXECUTE IMMEDIATE 'GRANT SELECT ON health_progress_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON exercise_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON sleep_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON activities_view TO SWASTH_CLIENT';
            EXECUTE IMMEDIATE 'GRANT SELECT ON user_overview TO SWASTH_CLIENT';
            DBMS_OUTPUT.PUT_LINE('SWASTH_CLIENT ROLE GIVEN ACCESS');

            
END;
/


BEGIN
    ROLE_CREATION_PROCEDURE;
    SELECT * FROM DBA_ROLES;
END;

